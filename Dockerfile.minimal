# Minimal working Dockerfile for Coolify
FROM node:18-alpine AS frontend-builder

RUN apk add --no-cache openssl

WORKDIR /app
COPY frontend/package*.json ./
RUN npm ci

COPY frontend/ ./

ENV NODE_ENV=production
ENV GENERATE_SOURCEMAP=false
ENV REACT_APP_BUILD_TIME=2025-08-06T13:30:00.000Z
ENV REACT_APP_BUILD_HASH=coolify-build

RUN npx react-app-rewired build

FROM node:18-alpine AS production

RUN apk add --no-cache curl nginx

# Create user
RUN addgroup -g 1001 -S nodejs && adduser -S app -u 1001

# Setup nginx
RUN mkdir -p /var/cache/nginx /var/log/nginx /run/nginx && \
    chown -R app:nodejs /var/cache/nginx /var/log/nginx /run/nginx

WORKDIR /app

# Copy backend
COPY backend/package*.json ./
RUN npm ci --only=production

COPY backend/ ./

# Copy frontend
COPY --from=frontend-builder /app/build ./frontend

# Create nginx config for port 8080 (non-root)
RUN echo 'worker_processes 1;' > /etc/nginx/nginx.conf && \
    echo 'pid /run/nginx/nginx.pid;' >> /etc/nginx/nginx.conf && \
    echo 'events { worker_connections 1024; }' >> /etc/nginx/nginx.conf && \
    echo 'http {' >> /etc/nginx/nginx.conf && \
    echo '  include /etc/nginx/mime.types;' >> /etc/nginx/nginx.conf && \
    echo '  server {' >> /etc/nginx/nginx.conf && \
    echo '    listen 8080;' >> /etc/nginx/nginx.conf && \
    echo '    root /app/frontend;' >> /etc/nginx/nginx.conf && \
    echo '    index index.html;' >> /etc/nginx/nginx.conf && \
    echo '    location / { try_files $$uri $$uri/ /index.html; }' >> /etc/nginx/nginx.conf && \
    echo '    location /health { return 200 "ok"; }' >> /etc/nginx/nginx.conf && \
    echo '  }' >> /etc/nginx/nginx.conf && \
    echo '}' >> /etc/nginx/nginx.conf

# Create startup script that just runs nginx
RUN echo '#!/bin/sh' > /app/start.sh && \
    echo 'exec nginx -c /etc/nginx/nginx.conf -g "daemon off;"' >> /app/start.sh && \
    chmod +x /app/start.sh

RUN chown -R app:nodejs /app

USER app

EXPOSE 8080

HEALTHCHECK --interval=30s --timeout=5s --start-period=10s --retries=3 \
    CMD curl -f http://localhost:8080/health || exit 1

CMD ["/app/start.sh"]
